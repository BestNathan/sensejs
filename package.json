{
  "name": "@sensejs/root",
  "version": "0.0.0",
  "description": "",
  "main": "index.js",
  "author": "",
  "license": "ISC",
  "private": true,
  "devDependencies": {
    "@commitlint/cli": "^8.3.5",
    "@commitlint/config-conventional": "^8.3.4",
    "@types/jest": "^25.2.2",
    "@types/koa": "^2.11.3",
    "@types/koa-bodyparser": "^4.3.0",
    "@types/koa-qs": "^2.0.0",
    "@types/koa__cors": "^3.0.1",
    "@types/koa__router": "^8.0.2",
    "@types/lodash": "^4.14.150",
    "@types/long": "^4.0.1",
    "@types/node": "^12.12.39",
    "@types/superagent": "^4.1.7",
    "@types/supertest": "^2.0.9",
    "@types/traverse": "^0.6.32",
    "@types/uuid": "^7.0.3",
    "@typescript-eslint/eslint-plugin": "^2.33.0",
    "@typescript-eslint/parser": "^2.33.0",
    "eslint": "^6.8.0",
    "husky": "^4.2.5",
    "inversify": "^5.0.1",
    "jest": "^26.0.1",
    "kafkajs": "^1.12.0",
    "lint-staged": "^10.2.2",
    "lodash": "^4.17.15",
    "reflect-metadata": "^0.1.13",
    "rxjs": "^6.5.5",
    "source-map-support": "^0.5.19",
    "sqlite3": "^4.2.0",
    "supertest": "^4.0.2",
    "ts-jest": "^26.0.0",
    "ts-node": "^8.10.1",
    "tslib": "^1.13.0",
    "typeorm": "^0.2.24",
    "typescript": "^3.9.2",
    "typescript-formatter": "^7.2.2"
  },
  "husky": {
    "hooks": {
      "pre-commit": "pnpm recursive run prepare && lint-staged",
      "pre-push": "pnpm t",
      "commit-msg": "commitlint -E HUSKY_GIT_PARAMS",
      "post-checkout": "sh scripts/post-checkout.sh",
      "post-merge": "pnpm m i"
    }
  },
  "lint-staged": {
    "*.ts?(x)": [
      "pnpm run format --",
      "pnpm run lint --"
    ]
  },
  "scripts": {
    "test": "jest",
    "lint": "eslint --",
    "lint-all": "eslint '**/*.ts'",
    "build": "pnpm recursive run prepare",
    "pretest": "pnpm recursive run prepare",
    "release": "pnpm recursive --workspace-concurrency 1 --filter ./packages exec -- pnpx release-it -c `pwd`/.release-it.yaml --non-interactive",
    "prettier": "prettier --write --parser typescript \"packages/**/*.ts?(x)\" \"examples/**/*.ts?(x)\"",
    "format": "tsfmt -r"
  }
}
